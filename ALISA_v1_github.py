
# ‚ïî‚ïê‚ïê‚ïê‚ïó‚ïî‚ïó‚îÄ‚îÄ‚îÄ‚ïî‚ïê‚ïê‚ïó‚ïî‚ïê‚ïê‚ïê‚ïó‚ïî‚ïê‚ïê‚ïê‚ïó     ‚ïî‚ïê‚ïê‚ïó‚îÄ‚ïî‚ïê‚ïê‚ïê‚ïó‚ïî‚ïê‚ïê‚ïê‚ïê‚ïó     ‚ïî‚ïó‚îÄ‚îÄ‚ïî‚ïó‚îÄ‚ïî‚ïó‚îÄ
# ‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïë‚îÄ‚îÄ‚îÄ‚ïö‚ï£‚îÄ‚ïù‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïî‚ïê‚ïó‚ïë     ‚ïë‚ïî‚ïó‚ïë‚îÄ‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïî‚ïó‚ïî‚ïó‚ïë     ‚ïë‚ïö‚ïó‚ïî‚ïù‚ïë‚ïî‚ïù‚ïë‚îÄ
# ‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïë‚ïë‚îÄ‚îÄ‚îÄ‚îÄ‚ïë‚ïë‚îÄ‚ïë‚ïö‚ïê‚ïê‚ïó‚ïë‚ïë‚îÄ‚ïë‚ïë     ‚ïë‚ïö‚ïù‚ïö‚ïó‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïö‚ïù‚ïë‚ïë‚ïö‚ïù     ‚ïö‚ïó‚ïë‚ïë‚ïî‚ïù‚ïö‚ïó‚ïë‚îÄ
# ‚ïë‚ïö‚ïê‚ïù‚ïë‚ïë‚ïë‚îÄ‚ïî‚ïó‚îÄ‚ïë‚ïë‚îÄ‚ïö‚ïê‚ïê‚ïó‚ïë‚ïë‚ïö‚ïê‚ïù‚ïë     ‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïë‚îÄ‚ïë‚ïë‚îÄ‚îÄ‚ïë‚ïë‚îÄ‚îÄ     ‚îÄ‚ïë‚ïö‚ïù‚ïë‚îÄ‚îÄ‚ïë‚ïë‚îÄ
# ‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïö‚ïê‚ïù‚ïë‚ïî‚ï£‚îÄ‚ïó‚ïë‚ïö‚ïê‚ïù‚ïë‚ïë‚ïî‚ïê‚ïó‚ïë     ‚ïë‚ïö‚ïê‚ïù‚ïë‚ïë‚ïö‚ïê‚ïù‚ïë‚îÄ‚îÄ‚ïë‚ïë‚îÄ‚îÄ     ‚îÄ‚ïö‚ïó‚ïî‚ïù‚îÄ‚ïî‚ïù‚ïö‚ïó
# ‚ïö‚ïù‚îÄ‚ïö‚ïù‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïù‚îÄ‚ïö‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïù‚îÄ‚îÄ‚ïö‚ïù‚îÄ‚îÄ     ‚îÄ‚îÄ‚ïö‚ïù‚îÄ‚îÄ‚ïö‚ïê‚ïê‚ïù

# ‚ïî‚ïê‚ïê‚ïó‚îÄ‚ïî‚ïó‚îÄ‚îÄ‚ïî‚ïó     ‚ïî‚ïó‚îÄ‚îÄ‚ïî‚ïó‚ïî‚ïê‚ïê‚ïó‚ïî‚ïê‚ïê‚ïê‚ïó‚ïî‚ïê‚ïê‚ïê‚ïó‚ïî‚ïê‚ïó‚îÄ‚ïî‚ïó‚ïî‚ïê‚ïê‚ïó‚ïî‚ïê‚ïó‚îÄ‚ïî‚ïó
# ‚ïë‚ïî‚ïó‚ïë‚îÄ‚ïë‚ïö‚ïó‚ïî‚ïù‚ïë     ‚ïë‚ïö‚ïó‚ïî‚ïù‚ïë‚ïö‚ï£‚îÄ‚ïù‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïî‚ïê‚ïó‚ïë‚ïë‚ïë‚ïö‚ïó‚ïë‚ïë‚ïö‚ï£‚îÄ‚ïù‚ïë‚ïë‚ïö‚ïó‚ïë‚ïë
# ‚ïë‚ïö‚ïù‚ïö‚ïó‚ïö‚ïó‚ïö‚ïù‚ïî‚ïù     ‚ïö‚ïó‚ïë‚ïë‚ïî‚ïù‚îÄ‚ïë‚ïë‚îÄ‚ïë‚ïö‚ïê‚ïù‚ïë‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïë‚ïî‚ïó‚ïö‚ïù‚ïë‚îÄ‚ïë‚ïë‚îÄ‚ïë‚ïî‚ïó‚ïö‚ïù‚ïë
# ‚ïë‚ïî‚ïê‚ïó‚ïë‚îÄ‚ïö‚ïó‚ïî‚ïù‚îÄ     ‚îÄ‚ïë‚ïö‚ïù‚ïë‚îÄ‚îÄ‚ïë‚ïë‚îÄ‚ïë‚ïî‚ïó‚ïî‚ïù‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïë‚ïë‚ïö‚ïó‚ïë‚ïë‚îÄ‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïö‚ïó‚ïë‚ïë
# ‚ïë‚ïö‚ïê‚ïù‚ïë‚îÄ‚îÄ‚ïë‚ïë‚îÄ‚îÄ     ‚îÄ‚ïö‚ïó‚ïî‚ïù‚îÄ‚ïî‚ï£‚îÄ‚ïó‚ïë‚ïë‚ïë‚ïö‚ïó‚ïë‚ïö‚ïê‚ïù‚ïë‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïë‚ïî‚ï£‚îÄ‚ïó‚ïë‚ïë‚îÄ‚ïë‚ïë‚ïë
# ‚ïö‚ïê‚ïê‚ïê‚ïù‚îÄ‚îÄ‚ïö‚ïù‚îÄ‚îÄ     ‚îÄ‚îÄ‚ïö‚ïù‚îÄ‚îÄ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïù‚îÄ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù‚ïö‚ïù‚îÄ‚ïö‚ïê‚ïù

# https://github.com/ViRonin/Alisa_bot

import sqlite3
from random import choice
from time                         import sleep
try:
    from telebot                  import TeleBot
    from telebot.apihelper        import ApiException
    from telebot.types            import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
    

except ImportError:
    raise SystemExit('Please run > pip3 install PyTelegramBotApi')
try:
    from googletrans              import Translator
except ImportError:
    raise SystemExit('Please run ‚Ä∫ pip3 install googletrans==3.1.0a0')
try:
    import pyowm
except ImportError:
    raise SystemExit('Please run > pip3 install pyowm')
try:
    import wikipedia
except ImportError:
    raise SystemExit('Please run > pip3 install wikipedia')

# –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –Ω–æ–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã
# pip3 install --upgrade pip
# pip3 install --upgrade setuptools pip
# pip install --upgrade setuptools pip

# pip3 install selenium
# pip3 install wikipedia
# pip3 install pyowm
# pip3 install googletrans==3.1.0a0
# pip3 install PyTelegramBotApi
# __________IF error telebot___________
# pip3 uninstall pytelegrambotapi
# pip3 install --no-cache-dir pytelegrambotapi
    


TelegramToken = 'YOU_Telegram_Token' #@Alisa   Name: Alisa v 1

Admin = 00000000000   # –í–∞—à id –Ω–æ–º–µ—Ä (—É –º–µ–Ω—è 11 –∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ) –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç —Ä–µ–∂–∏–º–∞ –∏–ª–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–π —é–∑–µ—Ä –≤—ã–±–æ—Ä–∫–∏ –∫–æ—Ç–æ—Ä–æ—é –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –≤–∏–¥–µ –ë–î –∏–ª–∏ List —Å–ø–∏—Å–∫–∞

bot = TeleBot(TelegramToken, threaded=True)


# List —Å–ø–∏—Å–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ—à–µ–π —Ä–∞–±–æ—Ç—ã 
hey_msg = ['–•–∞—é –•–∞–π ','–ü—Ä–∏–≤–µ—Ç ','–ö—É ']
bot_name = ['üòªKittyüòª','üßÅAlisüßÅ','üç©Alisaüç©','üñ§Alisenkaüñ§','üçìAliseüçì']
user_name = ['Developer','Coder','Genius','Mastermind','Buddy','Programmer']
Random_stiker = ['CAACAgIAAxkBAAEC8XJhSiQYEjbSt_D5g26bx453gBtvtgAC9g8AAgWFOEov0phxqUTG6yEE','CAACAgIAAxkBAAEC8W5hSiQPEZCKpauLctOWFncdV3r0tAACShAAAm_JOUoTaKSojK4slSEE','CAACAgIAAxkBAAEC8WxhSiQJZlzsqeZ2ZyV7rdnS3NHepAACMA4AAqqhOUoiNP30KochLCEE', 'CAACAgIAAxkBAAEC8WZhSiPzuDwwQFTDgeYTDPvqJmUHQAACFA8AAnEnOEqeaQf8uNHFgSEE', 'CAACAgIAAxkBAAEC8YBhSiRULrydDGZ4d6guaWv-4M92WwAClREAAgtMOUp78zTcSt32zyEE', 'CAACAgIAAxkBAAEC8YRhSiRpUVBOG7XN-U3MlQFFjD8HUAACDxAAAjRjOEoeYGzx0R4TiiEE', 'CAACAgIAAxkBAAEC8YphSiSPvcFlvV81aq2EJHEi87UBPwACog4AAsY_OErLdJPfP8yb6iEE', 'CAACAgIAAxkBAAEC8YxhSiSYx12qBF3i_V2bLEn4ydWGXAACMg4AAs-GOEqiPDA_9nFS2iEE', 'CAACAgIAAxkBAAEDFkphaY9bd594GwPWCnFkRFQtzdzYnQACng8AApmlOUpX7_LVwL4HbyEE', 'CAACAgIAAxkBAAEDFkthaY9d9xPa9EFz_4KRcXIufMqexQACyRAAAtb6OEoDTSXVkd1irSEE', 'CAACAgIAAxkBAAEDFlBhaY-c6Oo7o-pK2DTNSQxIyE0H6wACRBEAAmimOUo48TWqNCyCpiEE', 'CAACAgIAAxkBAAEDFlBhaY-c6Oo7o-pK2DTNSQxIyE0H6wACRBEAAmimOUo48TWqNCyCpiEE', 'CAACAgIAAxkBAAEDFk5haY-ZT8faNtZQkd6P_mPN1juuQQACrQ4AAs_ROEqIdcDkaN58NiEE', 'CAACAgIAAxkBAAEDFlRhaY-igrTZN9AUQIMUdMf1xOBezwACQxEAAtFPOUrYoksZJ_GEPiEE']


# ================= Security ===================== 


@bot.message_handler(commands=['start'])
def send_text(message):
    with sqlite3.connect(r".\Security.db") as conn:  #–î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –±—É–¥—É—Ç –≤ –ë–î Security_Katerina.db –≥–¥–µ –≤—ã —Å–ø–æ–∫–æ–π–Ω–æ —Å–º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø –≥–æ—Å—Ç–µ–≤–æ–º—É –ø–æ–ª—å–∑–µ–≤–æ—Ç–µ–ª—é –≤—Ä—É—á–Ω—É—é.
        cur = conn.cursor()
        cur.execute("CREATE TABLE IF NOT EXISTS users (user_id INT UNIQUE)")
        conn.commit()
    cur.execute("SELECT * FROM users WHERE user_id=?", (message.from_user.id,))
    userID = cur.fetchone()
    if userID != None:
        bot.send_message(message.chat.id, message.text) 
        bot.send_message(message.chat.id, f'{message.from_user.first_name} ! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω! /help ')
        bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEC8XZhSiQio0SKG9EIg7J1AgABCOHuiNoAAvUPAAL5ajlKK--jnuNCz_ohBA')
    else:
        bot.send_message(message.chat.id, f'{message.from_user.first_name} —Ä–∞–¥–∞ –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å! –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')
        bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEC8XRhSiQeCbYRgn6fEToCcolDCJr4RgACiBEAArw1OUpPeXbyZJTYdCEE')
        bot.register_next_step_handler(message, security)

def security(message):
    print(message.text)
    if message.text in ['datadatadata', '1123321', '1110123', 'data456', 'passwordresume']:  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–æ–ª–µ–π 
        
                
        # –í–∞–∂–Ω–æ!!![–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é –±–æ—Ç–∞ —Ç–∏–ø–∞ /help –∏–ª–∏ —Ç–µ—Ö –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –±–æ—Ç–µ, —ç—Ç–æ —É—è–∑–≤–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–∞—è –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è!!!]
        # –†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã —Ç–æ–ª—å–∫–æ –í–∞–º! 
        
        # –ü–µ—Ä–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–∞—Ä–æ–ª—å –∞ –Ω–µ –∞–¥–º–∏–Ω List —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º –ü–ö –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏ —Å —á—É–∂–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–∞. 
        
        # –î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –±—É–¥—É—Ç –≤ –ë–î Security_Katerina.db –≥–¥–µ –≤—ã —Å–ø–æ–∫–æ–π–Ω–æ —Å–º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø –≥–æ—Å—Ç–µ–≤–æ–º—É –ø–æ–ª—å–∑–µ–≤–æ—Ç–µ–ª—é –≤—Ä—É—á–Ω—É—é. 
         
        
        with sqlite3.connect(r".\Security.db") as conn:    # –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∑–∞–ø–∏—Å–∞–Ω–æ –ø—Ä–∏ –ø–æ–º–æ—â–∏ SQL —Ñ–∞–π–ª–∞
            cur = conn.cursor()
        cur.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (message.from_user.id,))
        conn.commit()
        bot.send_message(message.chat.id, f'{message.from_user.first_name} –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –í–∞–º –æ—Ç–∫—Ä—ã—Ç! –ù–∞–∂–º–∏—Ç–µ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∏ –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.')
        bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEC8WxhSiQJZlzsqeZ2ZyV7rdnS3NHepAACMA4AAqqhOUoiNP30KochLCEE')
        sleep(600)
        bot.send_message(message.chat.id, f'{message.from_user.first_name} –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –í–∞—Å —Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ù–∞–¥–µ—é—Å—å –≤—ã –ø–æ–ø—Ä–æ–±—É–µ—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞, –û–Ω —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π, –≤ –≤–∏–¥–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã!')
        sleep(3)
        bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEC8YZhSiR1PlCP8IVBclcvYzE1HNwUCwAC1g8AAsakOErtt1AcC2j8tiEE')
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ó–≤–æ–Ω—é –≤ –ø–æ–ª–∏—Ü–∏—é!')
        sleep(3)
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEC8XphSiQ2IJUUW9XsILfn4g9wQ-9eeQACng4AAr50OUpLiCd5b-JQ3CEE')
        bot.register_next_step_handler(message, security)


# ===================== COMANDS for Admin ==================================
# 
bot.send_message(Admin, '–ü—Ä–∏–≤–µ—Ç –û–¥–º–µ–Ω! –Ø –æ–Ω–ª–∞–π–Ω!')
bot.send_sticker(Admin, choice(Random_stiker))


# ===================== COMANDS ==================================
@bot.message_handler(commands=['help'])
def help(message):
    text_help = "help - –ü–æ–º–æ—â—å\n\
        \n /start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫/rebut \n\
        \n /weather - weather now/world üá¨üáß üá∑üá∫ üá∫üá¶ üåê\n\
        \n /wiki - Search page Wiki üá¨üáß üá∑üá∫ üá∫üá¶ \n\
        \n\
        \n ---------–ö–æ–º–∞–Ω–¥—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ---------\n\
        \n\
        \n /gismet - –ü–æ–≥–æ–¥–∞ –ì—ñ—Å–º–µ—Ç—ñ–æ —Å—å–æ–≥–æ–¥–Ω—ñ\–∑–∞–≤—Ç—Ä–∞ (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) üá∫üá¶ \n\
        \n /urlpng - URL —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ PNG (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) \n\
        \n /usdminfin - –∫—É—Ä—Å—ã –≤ –±–∞–Ω–∫–∞—ÖüíµUSDüá∫üá¶ (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) \n\
        \n /eurminfin - –∫—É—Ä—Å—ã –≤ –±–∞–Ω–∫–∞—Öüí∂EURüá∫üá¶ (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) \n\
        \n /imei - –ø—Ä–æ–≤–µ—Ä–∫–∞ imei —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ú–í–° üá∫üá¶ –±–∞–∑–∞ (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) \n\
        \n /vin - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ –Ω–∞ —É–≥–æ–Ω –ú–í–° üá∫üá¶ –±–∞–∑–∞ (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) \n\
        \n /validtele - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) ‚òéÔ∏èüåê \n\
        \n /validemail - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email (–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ) üìßüåê"
                   
    bot.send_message(message.chat.id, text_help)


#============================= WIKIPEDIA ru ua eng =================================

@bot.message_handler(commands=['wiki'])
def wiki(message):
    markup = ReplyKeyboardMarkup()
    b = KeyboardButton('–†—É—Å—Å–∫–∞—è –≤–∏–∫–∏ –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ —Å—Ç–∞—Ç—å–∏ üá∑üá∫')
    b1 = KeyboardButton('English wiki search for the first paragraph of an article üá¨üáß')
    b2 = KeyboardButton('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤—ñ–∫—ñ –ø–æ—à—É–∫ –ø–µ—Ä—à–æ–≥–æ –∞–±–∑–∞—Ü—É —Å—Ç–∞—Ç—ñ üá∫üá¶')
    markup.add(b)
    markup.add(b1)
    markup.add(b2)

    bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEC8YphSiSPvcFlvV81aq2EJHEi87UBPwACog4AAsY_OErLdJPfP8yb6iEE')
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫/ –í–∏–±–µ—Ä—ñ—Ç—å –º–æ–≤—É/ Choose language', reply_markup=markup)
    
    bot.register_next_step_handler(message, wiki1)

def wiki1(message):
    if message.text in ['–†—É—Å—Å–∫–∞—è –≤–∏–∫–∏ –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ —Å—Ç–∞—Ç—å–∏ üá∑üá∫', '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤—ñ–∫—ñ –ø–æ—à—É–∫ –ø–µ—Ä—à–æ–≥–æ –∞–±–∑–∞—Ü—É —Å—Ç–∞—Ç—ñ üá∫üá¶', 'English wiki search for the first paragraph of an article üá¨üáß']:
        if message.text == '–†—É—Å—Å–∫–∞—è –≤–∏–∫–∏ –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ —Å—Ç–∞—Ç—å–∏ üá∑üá∫':
            language_cod = 'ru'
        elif message.text == '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤—ñ–∫—ñ –ø–æ—à—É–∫ –ø–µ—Ä—à–æ–≥–æ –∞–±–∑–∞—Ü—É —Å—Ç–∞—Ç—ñ üá∫üá¶':
            language_cod = 'uk'
        elif message.text == 'English wiki search for the first paragraph of an article üá¨üáß':
            language_cod = 'en'

        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ–∏—Å–∫–∞ üá∑üá∫\nEnter your search text üá¨üáß\n–í–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—à—É–∫—É üá∫üá¶', reply_markup=ReplyKeyboardRemove())

        bot.register_next_step_handler(message, wiki2, language_cod)
        
    else:
        markup = ReplyKeyboardMarkup()
        b = KeyboardButton('–†—É—Å—Å–∫–∞—è –≤–∏–∫–∏ –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ —Å—Ç–∞—Ç—å–∏ üá∑üá∫')
        b1 = KeyboardButton('English wiki search for the first paragraph of an article üá¨üáß')
        b2 = KeyboardButton('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤—ñ–∫—ñ –ø–æ—à—É–∫ –ø–µ—Ä—à–æ–≥–æ –∞–±–∑–∞—Ü—É —Å—Ç–∞—Ç—ñ üá∫üá¶')
        markup.add(b)
        markup.add(b1)
        markup.add(b2)

        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞\n–û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ\nChoose an answer', reply_markup=markup)

        bot.register_next_step_handler(message, wiki1)

def wiki2(message, language_cod):
    try:

        wikipedia.set_lang(language_cod)
        search_result = wikipedia.summary(message.text)
        print(search_result)
        text = f" –†–µ–∑—É–ª—å—Ç–∞—Ç: \n Result: \n{search_result}"

        bot.send_message(message.chat.id, text)
    except Exception as e:
        bot.send_message(message.chat.id, '–ö–æ–Ω—Ç—Ä–µ—Ç–∏–∑–∏—Ä—É–π—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å\nCounter your request\n–ö–æ–Ω–∫—Ä–µ—Ç–∏–∑—É–π—Ç–µ –≤–∞—à –∑–∞–ø–∏—Ç', reply_markup=ReplyKeyboardRemove())

        bot.register_next_step_handler(message, wiki2, language_cod)


#============== config pyowm WEATHER ru ua eng==================


@bot.message_handler(commands=['weather'])
def weather(message):
    bot.send_sticker(message.chat.id,'CAACAgIAAxkBAAEC8W5hSiQPEZCKpauLctOWFncdV3r0tAACShAAAm_JOUoTaKSojK4slSEE')
    bot.send_message(message.chat.id, "Enter any city in world\nExample: Kiev\n\n–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π –≥–æ—Ä–æ–¥ –º–∏—Ä–∞.\n–ü—Ä–∏–º–µ—Ä: –ö–∏–µ–≤\n\n–í–µ–¥—ñ—Ç—å –±—É–¥—å-—è–∫–µ –º—ñ—Å—Ç–æ —Å–≤—ñ—Ç—É\n–ü—Ä–∏–∫–ª–∞–¥: –ö–∏—ó–≤\n")

    bot.register_next_step_handler(message, weather1)


def weather1(message):
    if message.text in ['–Ω—Å', '–ù–°', '–ù—Å', 'ns', 'NS'] and message.from_user.id == Admin :  # [== Admin] # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è —É–∫–æ—Ä–æ—á–µ–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ 
        message.text = "–ù–æ–≤–≥–æ—Ä–æ–¥-–°—ñ–≤–µ—Ä—Å—å–∫–∏–π"
    result = temper(message.text)
 

    if result == None:
        result = "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\nYou entered the wrong city. try again\n\n–í–∏ –≤–µ–ª–∏ –Ω–µ–≤—ñ—Ä–Ω–æ –º—ñ—Å—Ç–æ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑\n\n/weather"
      
    bot.send_message(message.chat.id, result, parse_mode="HTML")

def temper(city):
    translator = Translator(service_urls=['translate.googleapis.com'])

    translated = translator.detect(city)

    language_cod = translated.lang

    if language_cod == 'ru':
        w = temp_city(city, language_cod)

        if w == None:
            text = '–û—à–∏–±–∫–∞, –Ω–µ –Ω–∞–π–¥–µ–Ω –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
            return text

        temp = w.temperature('celsius')['temp']
        detailed_temp = w.detailed_status
        temp_max = w.temperature('celsius')['temp_max']
        temp_min = w.temperature('celsius')['temp_min']
        wind = w.wind()['speed']
        humidity = w.humidity
        sunset_time = w.sunset_time(timeformat='date')   #‚Äì GMT 0 UNIX time of sunset or None on polar days –∑–∞–∫–∞—Ç
        sunrise_time = w.sunrise_time(timeformat='date') #‚Äì GMT 0 UNIX time of sunrise or None on polar nights –≤–æ—Å—Ö–æ–¥

        if humidity < 40:
            rekom_humidity = "–ù–∏–∑–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞, –≤—Ä–∞—á–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –ø–∏—Ç—å –±–æ–ª—å—à–µ –∂–∏–¥–∫–æ—Å—Ç–∏!"
        elif humidity > 81:
            rekom_humidity = "–û—â—É—Ç–∏–º–æ –≤—ñ—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ (–¢—É–º–∞–Ω\–î–æ–∂–¥—å)!"
        elif humidity < 80:
            rekom_humidity = "–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã."
        else: 
            rekom_humidity = "–ë–æ–ª—å—à–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–∞–¥–µ–Ω–∏—è –æ—Å–∞–¥–∫–æ–≤, –∏–ª–∏ —Ç—É–º–∞–Ω–∞!"

        if temp < 5:
            rekom_temp = "–û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–¥—à—Ç–∞–Ω–Ω–∏–∫–∏!"
        elif temp < 15:
            rekom_temp = "–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–º–µ–Ω—è—Ç—å —à–æ—Ä—Ç—ã –Ω–∞ –∫—É—Ä—Ç–∫—É!"
        elif temp > 25:
            rekom_temp = "–û–∂–∏–¥–∞–µ–º–æ –≤—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"                
        else:
            rekom_temp = "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—Ä–º!"

        text = f"–í –≥–æ—Ä–æ–¥–µ {city} —Å–µ–π—á–∞—Å {detailed_temp}\
                \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Å–µ–π—á–∞—Å: {temp} ¬∞C\
                \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–∞–∫—Å: {temp_max} ¬∞C\
                \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–∏–Ω: {temp_min} ¬∞C\
                \n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind} –º/c\
                \n–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ {humidity} %\
                \n–í–æ–∑—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞ ( –í—Ä–µ–º—è GMT 0 )  {sunrise_time}\
                \n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞ ( –í—Ä–µ–º—è GMT 0 ) {sunset_time}\
                \n\
                \n<i>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\
                \n{rekom_temp}\
                \n{rekom_humidity}</i>"

        return text

    elif language_cod == 'uk':
        w = temp_city(city, language_cod)

        if w == None:
            text = '–ü–æ–º–∏–ª–∫–∞, –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –º—ñ—Å—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. /weather'
            return text
            

        temp = w.temperature('celsius')['temp']
        detailed_temp = w.detailed_status
        temp_max = w.temperature('celsius')['temp_max']
        temp_min = w.temperature('celsius')['temp_min']
        wind = w.wind()['speed']
        humidity = w.humidity
        sunset_time = w.sunset_time(timeformat='date')   #‚Äì GMT 0 UNIX time of sunset or None on polar days –∑–∞–∫–∞—Ç
        sunrise_time = w.sunrise_time(timeformat='date') #‚Äì GMT 0 UNIX time of sunrise or None on polar nights –≤–æ—Å—Ö–æ–¥

        if humidity < 40:
            rekom_humidity = "–ù–∏–∑—å–∫–∞ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–∏—Ç–∏ –±—ñ–ª—å—à–µ –≤–æ–¥–∏!"
        elif humidity > 81:
            rekom_humidity = "–í—ñ–¥—á—É—Ç–Ω–æ –≤–æ–ª–æ–≥–µ –ø–æ–≤—ñ—Ç—Ä—è(–¢—É–º–∞–Ω\–î–æ—â)"
        elif humidity < 80:
            rekom_humidity = "–í–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è –Ω–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Ä—ñ–≤–Ω—ñ."
        else: 
            rekom_humidity = "–í–µ–ª–∏–∫–∞ –≤—ñ—Ä–æ–≥—ñ–¥–Ω—ñ—Å—Ç—å –æ–ø–∞–¥—ñ–≤, –∞–±–æ —Ç—É–º–∞–Ω—É!"

        if temp < 5:
            rekom_temp = "–î—É–∂–µ –∑–∏–º–Ω–æ! –†–µ–∫–æ–º–µ–Ω–¥—É—é –¥—ñ—Å—Ç–∞—Ç–∏ –∫–∞–ª—å—Å–æ–Ω–∏!"
        elif temp < 15:
            rekom_temp = "–ü–æ–º—ñ–Ω—è–π –Ω–∞ –±–∞–∑–∞—Ä—ñ —à–æ—Ä—Ç–∏ –Ω–∞ –∫—É—Ä—Ç–∫—É!"
        elif temp > 25:
            rekom_temp = "–û—á—ñ–∫—É–≤–∞–Ω–æ –≤–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"        
        elif temp > 40:
            rekom_temp = "–ê–Ω–æ–º–∞–ª—å–Ω–æ –≤–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞! –ë—É–¥—å –æ–±–µ—Ä–µ–∂–Ω–∏–º!"                
        else:
            rekom_temp = "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ —Ä—ñ–≤–Ω—ñ –Ω–æ—Ä–º–∏!"

        text = f"–í –º—ñ—Å—Ç—ñ {city} –∑–∞—Ä–∞ {detailed_temp}\
                \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞—Ä–∞: {temp} ¬∞C\
                \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–∞–∫—Å: {temp_max} ¬∞C\
                \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–∏–Ω: {temp_min} ¬∞C\
                \n–®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É {wind} –º/c\
                \n–í–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è {humidity} %\
                \n–°—Ö—ñ–¥ —Å–æ–Ω—Ü—è ( –ß–∞—Å GMT 0 )  {sunrise_time}\
                \n–ó–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è ( –ß–∞—Å GMT 0 ) {sunset_time}\
                \n\
                \n<i>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:\
                \n{rekom_temp}\
                \n{rekom_humidity}</i>"

        return text

    elif language_cod == 'en':
        w = temp_city(city, language_cod)

        if w == None:
            text = 'Error, city not found. Try again. /weather'
            return text

        temp = w.temperature('celsius')['temp']
        detailed_temp = w.detailed_status
        temp_max = w.temperature('celsius')['temp_max']
        temp_min = w.temperature('celsius')['temp_min']
        wind = w.wind()['speed']
        humidity = w.humidity
        sunset_time = w.sunset_time(timeformat='date')   #‚Äì GMT 0 UNIX time of sunset or None on polar days –∑–∞–∫–∞—Ç
        sunrise_time = w.sunrise_time(timeformat='date') #‚Äì GMT 0 UNIX time of sunrise or None on polar nights –≤–æ—Å—Ö–æ–¥

        if humidity < 40:
            rekom_humidity = "Low humidity, Recommend drinking more water!"
        elif humidity > 81:
            rekom_humidity = "Sensibly humid air (Fog \ Rain)"
        elif humidity < 80:
            rekom_humidity = "Humidity is at a normal level."
        else: 
            rekom_humidity = "High probability of precipitation or fog"

        if temp < 5:
            rekom_temp = "Very cold, I recommend getting pants"
        elif temp < 15:
            rekom_temp = "Swap shorts for a jacket at the bazaar"
        elif temp > 25:
            rekom_temp = "Expected high temperature"        
        elif temp > 40:
            rekom_temp = "Abnormally high temperature! Be careful"                
        else:
            rekom_temp = "The temperature is normal"

        text = f"In the city {city} now {detailed_temp}\
                \nTemperature now: {temp} ¬∞C\
                \nTemperature max: {temp_max} ¬∞C\
                \nTemperature min: {temp_min} ¬∞C\
                \nWind speed {wind} m/s\
                \nAir humidity {humidity} %\
                \nSunrise (Time GMT 0 )  {sunrise_time}\
                \nSunset(Time GMT 0 ) {sunset_time}\
                \n\
                \n<i>Recommendations:\
                \n{rekom_temp}\
                \n{rekom_humidity}</i>"

        return text

def temp_city(city, language_code):
    try:
        config_dict = pyowm.utils.config.get_default_config()
        config_dict['language'] = language_code
        owm = pyowm.OWM('YPU_API_PYOWM', config_dict) 
        # 'YPU_API_PYOWM' –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ –æ—Ñ–∏—Ü—ã–∞–ª—å–Ω—ã–π —Å–∞–π—Ç https://openweathermap.org 
        # –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∏ –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –∫–ª—é—á https://openweathermap.org/api/one-call-api 
        mgr = owm.weather_manager()


        observation = mgr.weather_at_place(city)
        w = observation.weather

        return w
    except:
        return None

    
#================== Get number user phone =====================   

@bot.message_handler(content_types=['contact'])  
def contact(message):
    with sqlite3.connect(r".\Users.db") as conn:
        cur = conn.cursor()

        cur.execute("CREATE TABLE IF NOT EXISTS users (user_id INT UNIQUE, username TEXT, telephon INT UQUE, first_name TEXT, last_name TEXT)")
        conn.commit()
  
    if message.contact.first_name != message.from_user.first_name:
        bot.send_chat_action(message.chat.id, 'typing')
        sleep(2)
        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, f"{message.from_user.first_name}!!!, –ù–µ –æ–±–º–∞–Ω—ã–≤–∞–π –º–µ–Ω—è. –≠—Ç–æ –Ω–µ —Ç–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!!!")
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEC43thPSPRaU10jM6CzdqpHSQSalqd9wACqQ4AAn_C8Eq1HzxtOjyhXiAE')
    else:
        cur.execute("SELECT * FROM users WHERE user_id=?", (message.from_user.id,))
        userID = cur.fetchone()
        if userID == None:
            bot.send_chat_action(message.chat.id, 'typing')
            sleep(3)
            bot.delete_message(message.chat.id, message.message_id)

            cur.execute("INSERT OR IGNORE INTO users (user_id, username, telephon, first_name, last_name) VALUES (?, ?, ?, ?, ?)", (message.from_user.id, message.from_user.username, message.contact.phone_number, message.from_user.first_name, message.from_user.last_name))
            conn.commit()

            bot.send_message(message.chat.id, f'<b>{message.from_user.first_name}, –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!</b>', parse_mode="HTML")
            sleep(1)
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEC4FNhOUuVvmScj-inwt43KpDEs7-GFQACMG8CAAFji0YM3mF3HJtTMcIgBA')
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            sleep(3)
            bot.delete_message(message.chat.id, message.message_id)

            bot.send_message(message.chat.id, '–í—ã —É–∂–µ –≤–µ—Ä–µ—Ñ–µ—Ü—ã—Ä–æ–≤–∞–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEC2yphM--FJ9vgQTyTQQOTJ5Jp4aW2xwACSwIAAu1-0QvIfApTQphoVyAE')



# -------------------------------------------------------------------------
if __name__ == '__main__':
    print("    (Ôºæ‚Ä¢œâ‚Ä¢Ôºæ)„ÉéÔæû(((((((((‚óèÔΩû*   ========== Bot #@Alisa  Name: Alisa V 1 ========== ")
    while True:
        try:
            bot.polling(non_stop=True)
        except ApiException as e:
            print(e)

